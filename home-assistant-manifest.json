{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": false,
  "id": "https://json.schemastore.org/home-assistant-manifest.json",
  "properties": {
    "domain": {
      "description": "The domain is a short name consisting of characters and underscores. This domain has to be unique and cannot be changed. Example of the domain for the mobile app integration: mobile_app. The domain key has to match the directory this file is in.",
      "type": "string"
    },
    "name": {
      "description": "The name of the integration.",
      "type": "string"
    },
    "version": {
      "description": "The version of the integration is required for custom integrations. The version needs to be a valid version recognized by AwesomeVersion(https://github.com/ludeeus/awesomeversion) like CalVer(https://calver.org/) or SemVer(https://semver.org/).",
      "type": "string"
    },
    "integration_type": {
      "description": "Integrations are split into multiple integration types. Each integration must provide an integration_type in their manifest, that describes its main focus.",
      "type": "string",
      "default": "hub",
      "enum": [
        "device",
        "entity",
        "hardware",
        "helper",
        "hub",
        "service",
        "system",
        "virtual"
      ]
    },
    "documentation": {
      "description": "The website containing documentation on how to use your integration. If this integration is being submitted for inclusion in Home Assistant, it should be https://www.home-assistant.io/integrations/<domain>",
      "type": "string"
    },
    "issue_tracker": {
      "description": "The issue tracker of your integration, where users reports issues if they run into one. If this integration is being submitted for inclusion in Home Assistant, it should be omitted. For built-in integrations, Home Assistant will automatically generate the correct link.",
      "type": "string"
    },
    "dependencies": {
      "description": "Dependencies are other Home Assistant integrations you want Home Assistant to set up successfully before the integration is loaded. Adding an integration to dependencies will ensure the depending integration is loaded before setup, but it does not guarantee all dependency configuration entries have been set up. Adding dependencies can be necessary if you want to offer functionality from that other integration, like webhooks or an MQTT connection. Adding an after dependency might be a better alternative if a dependency is optional but not critical. See the MQTT section for more details on handling this for MQTT. Built-in integrations shall only specify other built-in integrations in dependencies. Custom integrations may specify both built-in and custom integrations in dependencies.",
      "items": {
        "type": "string"
      },
      "type": "array"
    },
    "after_dependencies": {
      "description": "This option is used to specify dependencies that might be used by the integration but aren't essential. When after_dependencies is present, set up of an integration will wait for the after_dependencies to be set up before being set up. It will also make sure that the requirements of after_dependencies are installed so methods from the integration can be safely imported.  For example, if the camera integration might use the stream integration in certain configurations, adding stream to after_dependencies will ensure that the stream integration is set up before the camera integration is set up. This will allow the camera integration to safely import methods from the stream integration. Built-in integrations shall only specify other built-in integrations in after_dependencies. Custom integrations may specify both built-in and custom integrations in after_dependencies.",
      "items": {
        "type": "string"
      },
      "type": "array"
    },
    "codeowners": {
      "description": "The codeowners of your integration, who are responsible for reviewing and merging pull requests. If this integration is being submitted for inclusion in Home Assistant, it should be omitted. For built-in integrations, Home Assistant will automatically generate the correct list.",
      "items": {
        "type": "string"
      },
      "type": "array"
    },
    "config_flow": {
      "description": "If your integration supports config flow, you should set this to true. If this integration is being submitted for inclusion in Home Assistant, it should be omitted. For built-in integrations, Home Assistant will automatically generate the correct value.",
      "type": "boolean"
    },
    "requirements": {
      "description": "The requirements for your integration. This is a list of PyPI packages that will be installed when your integration is set up. If this integration is being submitted for inclusion in Home Assistant, it should be omitted. For built-in integrations, Home Assistant will automatically generate the correct list. Each entry is a pip compatible string. For example, the media player Cast platform depends on the Python package PyChromecast v3.2.0: [\"pychromecast==3.2.0\"].",
      "items": {
        "type": "string"
      },
      "type": "array"
    },
    "loggers": {
      "description": "The loggers field is a list of names that the integration's requirements use for their getLogger(https://docs.python.org/3/library/logging.html?highlight=logging#logging.getLogger) calls.",
      "items": {
        "type": "string"
      },
      "type": "array"
    },
    "bluetooth": {
      "description": "If your integration supports discovery via bluetooth, you can add a matcher to your manifest",
      "items": {
        "type": "object",
        "properties": {
          "connectable": {
            "description": "If the device only needs advertisement data, setting connectable to false will opt-in to receive discovery from Bluetooth controllers that do not have support for making connections.",
            "type": "boolean"
          },
          "local_name": {
            "description": "Matches for local_name must be at least three (3) characters long and may not contain any patterns in the first three (3) characters. `\"local_name\": \"Prodigio_*\"`",
            "type": "string"
          },
          "manufacturer_id": {
            "type": "number"
          },
          "manufacturer_data_start": {
            "description": "a list of bytes encoded as integer values from 0-255",
            "items": {
              "type": "number",
              "maximum": 255,
              "minimum": 0
            },
            "type": "array"
          },
          "service_uuid": {
            "description": "128 bit uuid, If you want to match service data with a 16 bit uuid, you will have to convert it to a 128 bit uuid first, by replacing the 3rd and 4th byte in 00000000-0000-1000-8000-00805f9b34fb with the 16 bit uuid. For example, for Switchbot sensor devices, the 16 bit uuid is 0xfd3d, the corresponding 128 bit uuid becomes 0000fd3d-0000-1000-8000-00805f9b34fb.",
            "type": "string",
            "pattern": "^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$"
          },
          "service_data_uuid": {
            "description": "128 bit uuid, If you want to match service data with a 16 bit uuid, you will have to convert it to a 128 bit uuid first, by replacing the 3rd and 4th byte in 00000000-0000-1000-8000-00805f9b34fb with the 16 bit uuid. For example, for Switchbot sensor devices, the 16 bit uuid is 0xfd3d, the corresponding 128 bit uuid becomes 0000fd3d-0000-1000-8000-00805f9b34fb.",
            "type": "string",
            "pattern": "^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$"
          }
        }
      },
      "type": "array"
    },
    "zeroconf": {
      "description": "If your integration supports discovery via zeroconf, you can add a matcher to your manifest",
      "items": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "type": "object",
            "properties": {
          "type": {
            "description": "The type of the service. For example, _http._tcp.local.",
            "type": "string"
          },
          "name": {
            "description": "The name of the service. For example, Home Assistant.",
            "type": "string"
          },
          "properties": {
            "description": "A dictionary of properties that must be present in the service. Note that all values in the properties filters must be lowercase, and may contain a fnmatch type wildcard.",
            "type": "object",
            "items": {
                "type": "string"
            }
          }
        }
          }
        ]
      },
      "type": "array"
    },
    "ssdp": {
      "items": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
            "st": {
                "description": "The ST field is the search target. It is used to indicate what type of service is being searched for. For example, urn:schemas-upnp-org:device:MediaServer:1.",
                "type": "string"
            },
            "usn": {
                "description": "The USN field is the unique service name. It is used to uniquely identify a service instance. For example, uuid:2f402f80-da50-11e1-9b23-00178809ea66.",
                "type": "string"
            },
            "manufacturer": {
                "description": "The manufacturer field is the manufacturer of the device. For example, 'Roku'",
                "type": "string"
            },
           "deviceType": {
                "description": "The deviceType field is the type of device. For example, 'urn:roku-com:device:player:1-0'",
                "type": "string"
           }
        }
      },
      "type": "array"
    },
    "homekit": {
      "type": "object",
      "properties": {
        "models": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "mqtt": {
      "items": {
        "type": "string"
      },
      "type": "array"
    },
    "dhcp": {
      "items": {
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "macaddress": {
                "type": "string"
              },
              "hostname": {
                "type": "string"
              }
            }
          },
          {
            "type": "string",
            "properties": {
              "registered_devices": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "type": "array"
    },
    "usb": {
      "items": {
          "type": "object",
          "properties": {
          "vid": {
              "type": "string",
            "examples": [
                "AAAA"
            ]
          },
          "pid": {
              "type": "string",
                "examples": [
                    "BBBB"
                ]
          },
            "serial_number": {
              "type": "string",
              "examples": [
                "*1234*"
              ]
            },
            "manufacturer": {
              "type": "string",
              "examples": [
                "*midway*"
              ]
          },
            "description": {
              "type": "string",
              "examples": [
                "*zigbee*"
              ]
            }
          }
      },
      "type": "array"
    },
    "quality_scale": {
      "type": "string",
        "enum": [
            "silver",
            "gold",
            "platinum",
            "internal"
        ]
    },
    "iot_class": {
      "description": "The IoT Class describes how an integration connects with, e.g., a device or service. For more information about IoT Classes, read the blog about \"Classifying the Internet of Things\". (https://www.home-assistant.io/blog/2016/02/12/classifying-the-internet-of-things/#classifiers)",
      "type": "string",
      "enum": [
        "assumed_state",
        "cloud_polling",
        "cloud_push",
        "local_polling",
        "local_push",
        "calculated"
      ]
    }
  }
}

//<article><nav class="theme-doc-breadcrumbs breadcrumbsContainer_Z_bl" aria-label="Breadcrumbs"><ul class="breadcrumbs" itemscope="" itemtype="https://schema.org/BreadcrumbList"><li class="breadcrumbs__item"><a aria-label="Home page" class="breadcrumbs__link" href="/"><svg viewBox="0 0 24 24" class="breadcrumbHomeIcon_YNFT"><path d="M10 19v-5h4v5c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-7h1.7c.46 0 .68-.57.33-.87L12.67 3.6c-.38-.34-.96-.34-1.34 0l-8.36 7.53c-.34.3-.13.87.33.87H5v7c0 .55.45 1 1 1h3c.55 0 1-.45 1-1z" fill="currentColor"></path></svg></a></li><li class="breadcrumbs__item"><span class="breadcrumbs__link">Building Integrations</span><meta itemprop="position" content="1"></li><li itemscope="" itemprop="itemListElement" itemtype="https://schema.org/ListItem" class="breadcrumbs__item breadcrumbs__item--active"><span class="breadcrumbs__link" itemprop="name">Manifest</span><meta itemprop="position" content="2"></li></ul></nav><div class="tocCollapsible_ETCw theme-doc-toc-mobile tocMobile_ITEo"><button type="button" class="clean-btn tocCollapsibleButton_TO0P">On this page</button></div><div class="theme-doc-markdown markdown"><header><h1>Integration Manifest</h1></header><p>Every integration has a manifest file to specify its basic information. This file is stored as <code>manifest.json</code> in your integration directory. It is required to add such a file.</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #bfc7d5; --prism-background-color: #292d3e;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"domain"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"hue"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"name"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"Philips Hue"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"after_dependencies"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(199, 146, 234);">[</span><span class="token string" style="color: rgb(195, 232, 141);">"http"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">]</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"codeowners"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(199, 146, 234);">[</span><span class="token string" style="color: rgb(195, 232, 141);">"@balloob"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">]</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"dependencies"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(199, 146, 234);">[</span><span class="token string" style="color: rgb(195, 232, 141);">"mqtt"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">]</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"documentation"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"https://www.home-assistant.io/components/hue"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"integration_type"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"hub"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"iot_class"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"local_polling"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"issue_tracker"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"https://github.com/balloob/hue/issues"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"loggers"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(199, 146, 234);">[</span><span class="token string" style="color: rgb(195, 232, 141);">"aiohue"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">]</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"requirements"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(199, 146, 234);">[</span><span class="token string" style="color: rgb(195, 232, 141);">"aiohue==1.9.1"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">]</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"quality_scale"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"platinum"</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" class="clean-btn" aria-label="Toggle word wrap" title="Toggle word wrap"><svg viewBox="0 0 24 24" class="wordWrapButtonIcon_Bwma" aria-hidden="true"><path fill="currentColor" d="M4 19h6v-2H4v2zM20 5H4v2h16V5zm-3 6H4v2h13.25c1.1 0 2 .9 2 2s-.9 2-2 2H15v-2l-3 3l3 3v-2h2c2.21 0 4-1.79 4-4s-1.79-4-4-4z"></path></svg></button><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Or a minimal example that you can copy into your project:</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #bfc7d5; --prism-background-color: #292d3e;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"domain"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"your_domain_name"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"name"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"Your Integration"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"codeowners"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(199, 146, 234);">[</span><span class="token punctuation" style="color: rgb(199, 146, 234);">]</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"dependencies"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(199, 146, 234);">[</span><span class="token punctuation" style="color: rgb(199, 146, 234);">]</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"documentation"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"https://www.example.com"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"integration_type"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"hub"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"iot_class"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"cloud_polling"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"requirements"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(199, 146, 234);">[</span><span class="token punctuation" style="color: rgb(199, 146, 234);">]</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="domain">Domain<a href="#domain" class="hash-link" aria-label="Direct link to Domain" title="Direct link to Domain">&ZeroWidthSpace;</a></h2><p>The domain is a short name consisting of characters and underscores. This domain has to be unique and cannot be changed. Example of the domain for the mobile app integration: <code>mobile_app</code>. The domain key has to match the directory this file is in.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="name">Name<a href="#name" class="hash-link" aria-label="Direct link to Name" title="Direct link to Name">&ZeroWidthSpace;</a></h2><p>The name of the integration.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="version">Version<a href="#version" class="hash-link" aria-label="Direct link to Version" title="Direct link to Version">&ZeroWidthSpace;</a></h2><p>For core integrations, this should be omitted.</p><p>The version of the integration is required for custom integrations. The version needs to be a valid version recognized by <a href="https://github.com/ludeeus/awesomeversion" target="_blank" rel="noopener noreferrer">AwesomeVersion</a> like <a href="https://calver.org/" target="_blank" rel="noopener noreferrer">CalVer</a> or <a href="https://semver.org/" target="_blank" rel="noopener noreferrer">SemVer</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="integration-type">Integration Type<a href="#integration-type" class="hash-link" aria-label="Direct link to Integration Type" title="Direct link to Integration Type">&ZeroWidthSpace;</a></h2><p>Integrations are split into multiple integration types. Each integration
//must provide an <code>integration_type</code> in their manifest, that describes its main
//focus.</p><div class="theme-admonition theme-admonition-warning alert alert--danger admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"></path></svg></span>danger</div><div class="admonitionContent_S0QG"><p>When not set, we currently default to <code>hub</code>. This default is temporary during
//our transition period, every integration should set an <code>integration_type</code> and
//it thus will become mandatory in the future.</p></div></div><table><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>device</code></td><td>Provides a single device like, for example, ESPHome.</td></tr><tr><td><code>entity</code></td><td>Provides a basic entity platform, like sensor or light. This should generally not be used.</td></tr><tr><td><code>hardware</code></td><td>Provides a hardware integration, like Raspbery Pi or Hardkernel. This should generally not be used.</td></tr><tr><td><code>helper</code></td><td>Provides an entity to help the user with automations like input boolean, derivative or group.</td></tr><tr><td><code>hub</code></td><td>Provides a hub integration, with multiple devices or services, like Philips Hue.</td></tr><tr><td><code>service</code></td><td>Provides a single service, like DuckDNS or AdGuard.</td></tr><tr><td><code>system</code></td><td>Provides a system integration and is reserved, should generally not be used.</td></tr><tr><td><code>virtual</code></td><td>Not an integration on its own. Instead it points towards another integration or IoT standard. See <a href="#virtual-integration">virtual integration</a> section.</td></tr></tbody></table><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_S0QG"><p>The difference between a <code>hub</code> and a <code>service</code> or <code>device</code> is defined by the nature
//of the integration. A <code>hub</code> provides a gateway to multiple other devices or
//services. <code>service</code> and <code>device</code> are integrations that provide a single device
//or service per config entry.</p></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="documentation">Documentation<a href="#documentation" class="hash-link" aria-label="Direct link to Documentation" title="Direct link to Documentation">&ZeroWidthSpace;</a></h2><p>The website containing documentation on how to use your integration. If this integration is being submitted for inclusion in Home Assistant, it should be <code>https://www.home-assistant.io/integrations/&lt;domain&gt;</code></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="issue-tracker">Issue Tracker<a href="#issue-tracker" class="hash-link" aria-label="Direct link to Issue Tracker" title="Direct link to Issue Tracker">&ZeroWidthSpace;</a></h2><p>The issue tracker of your integration, where users reports issues if they run into one.
//If this integration is being submitted for inclusion in Home Assistant, it should be omitted. For built-in integrations, Home Assistant will automatically generate the correct link.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="dependencies">Dependencies<a href="#dependencies" class="hash-link" aria-label="Direct link to Dependencies" title="Direct link to Dependencies">&ZeroWidthSpace;</a></h2><p>Dependencies are other Home Assistant integrations you want Home Assistant to set up successfully before the integration is loaded. Adding an integration to dependencies will ensure the depending integration is loaded before setup, but it does not guarantee all dependency configuration entries have been set up. Adding dependencies can be necessary if you want to offer functionality from that other integration, like webhooks or an MQTT connection. Adding an <a href="#after-dependencies">after dependency</a> might be a better alternative if a dependency is optional but not critical. See the <a href="#mqtt">MQTT section</a> for more details on handling this for MQTT.</p><p>Built-in integrations shall only specify other built-in integrations in <code>dependencies</code>. Custom integrations may specify both built-in and custom integrations in <code>dependencies</code>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="after-dependencies">After dependencies<a href="#after-dependencies" class="hash-link" aria-label="Direct link to After dependencies" title="Direct link to After dependencies">&ZeroWidthSpace;</a></h2><p>This option is used to specify dependencies that might be used by the integration but aren't essential. When <code>after_dependencies</code> is present, set up of an integration will wait for the <code>after_dependencies</code> to be set up before being set up. It will also make sure that the requirements of <code>after_dependencies</code> are installed so methods from the integration can be safely imported.  For example, if the <code>camera</code> integration might use the <code>stream</code> integration in certain configurations, adding <code>stream</code> to <code>after_dependencies</code> of <code>camera</code>'s manifest, will ensure that <code>stream</code> is loaded before <code>camera</code> if it is configured.  If <code>stream</code> is not configured, <code>camera</code> will still load.</p><p>Built-in integrations shall only specify other built-in integrations in <code>after_dependencies</code>. Custom integrations may specify both built-in and custom integrations in <code>after_dependencies</code>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="code-owners">Code Owners<a href="#code-owners" class="hash-link" aria-label="Direct link to Code Owners" title="Direct link to Code Owners">&ZeroWidthSpace;</a></h2><p>GitHub usernames or team names of people that are responsible for this integration. You should add at least your GitHub username here, as well as anyone who helped you to write code that is being included.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="config-flow">Config Flow<a href="#config-flow" class="hash-link" aria-label="Direct link to Config Flow" title="Direct link to Config Flow">&ZeroWidthSpace;</a></h2><p>Specify the <code>config_flow</code> key if your integration has a config flow to create a config entry. When specified, the file <code>config_flow.py</code> needs to exist in your integration.</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #bfc7d5; --prism-background-color: #292d3e;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"config_flow"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token boolean" style="color: rgb(255, 88, 116);">true</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="requirements">Requirements<a href="#requirements" class="hash-link" aria-label="Direct link to Requirements" title="Direct link to Requirements">&ZeroWidthSpace;</a></h2><p>Requirements are Python libraries or modules that you would normally install using <code>pip</code> for your component. Home Assistant will try to install the requirements into the <code>deps</code> subdirectory of the Home Assistant <a href="https://www.home-assistant.io/docs/configuration/" target="_blank" rel="noopener noreferrer">configuration directory</a> if you are not using a <code>venv</code> or in something like <code>path/to/venv/lib/python3.6/site-packages</code> if you are running in a virtual environment. This will make sure that all requirements are present at startup. If steps fail, like missing packages for the compilation of a module or other install errors, the component will fail to load.</p><p>Requirements is an array of strings. Each entry is a <code>pip</code> compatible string. For example, the media player Cast platform depends on the Python package PyChromecast v3.2.0: <code>["pychromecast==3.2.0"]</code>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="custom-requirements-during-development--testing">Custom requirements during development &amp; testing<a href="#custom-requirements-during-development--testing" class="hash-link" aria-label="Direct link to Custom requirements during development &amp; testing" title="Direct link to Custom requirements during development &amp; testing">&ZeroWidthSpace;</a></h3><p>During the development of a component, it can be useful to test against different versions of a requirement. This can be done in two steps, using <code>pychromecast</code> as an example:</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #bfc7d5; --prism-background-color: #292d3e;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">pip </span><span class="token function" style="color: rgb(130, 170, 255);">install</span><span class="token plain"> </span><span class="token assign-left variable" style="color: rgb(191, 199, 213);">pychromecast</span><span class="token operator" style="color: rgb(137, 221, 255);">==</span><span class="token number" style="color: rgb(247, 140, 108);">3.2</span><span class="token plain">.0 --target ~/.homeassistant/deps</span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">hass --skip-pip-packages pychromecast</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" class="clean-btn" aria-label="Toggle word wrap" title="Toggle word wrap"><svg viewBox="0 0 24 24" class="wordWrapButtonIcon_Bwma" aria-hidden="true"><path fill="currentColor" d="M4 19h6v-2H4v2zM20 5H4v2h16V5zm-3 6H4v2h13.25c1.1 0 2 .9 2 2s-.9 2-2 2H15v-2l-3 3l3 3v-2h2c2.21 0 4-1.79 4-4s-1.79-4-4-4z"></path></svg></button><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This will use the specified version, and prevent Home Assistant from trying to override it with what is specified in <code>requirements</code>. To prevent any package from being automatically overridden without specifying dependencies, you can launch Home Assistant with the global <code>--skip-pip</code> flag.</p><p>If you need to make changes to a requirement to support your component, it's also possible to install a development version of the requirement using <code>pip install -e</code>:</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #bfc7d5; --prism-background-color: #292d3e;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token function" style="color: rgb(130, 170, 255);">git</span><span class="token plain"> clone https://github.com/balloob/pychromecast.git</span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">pip </span><span class="token function" style="color: rgb(130, 170, 255);">install</span><span class="token plain"> -e ./pychromecast</span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">hass --skip-pip-packages pychromecast</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>It is also possible to use a public git repository to install a requirement.  This can be useful, for example, to test changes to a requirement dependency before it's been published to PyPI. The following example will install the <code>except_connect</code> branch of the <code>pycoolmaster</code> library directly from GitHub unless version <code>0.2.2</code> is currently installed:</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #bfc7d5; --prism-background-color: #292d3e;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"requirements"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(199, 146, 234);">[</span><span class="token string" style="color: rgb(195, 232, 141);">"git+https://github.com/issacg/pycoolmaster.git@except_connect#pycoolmaster==0.2.2"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">]</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" class="clean-btn" aria-label="Toggle word wrap" title="Toggle word wrap"><svg viewBox="0 0 24 24" class="wordWrapButtonIcon_Bwma" aria-hidden="true"><path fill="currentColor" d="M4 19h6v-2H4v2zM20 5H4v2h16V5zm-3 6H4v2h13.25c1.1 0 2 .9 2 2s-.9 2-2 2H15v-2l-3 3l3 3v-2h2c2.21 0 4-1.79 4-4s-1.79-4-4-4z"></path></svg></button><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="custom-integration-requirements">Custom integration requirements<a href="#custom-integration-requirements" class="hash-link" aria-label="Direct link to Custom integration requirements" title="Direct link to Custom integration requirements">&ZeroWidthSpace;</a></h3><p>Custom integrations should only include requirements that are not required by the Core <a href="https://github.com/home-assistant/core/blob/dev/requirements.txt" target="_blank" rel="noopener noreferrer">requirements.txt</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="loggers">Loggers<a href="#loggers" class="hash-link" aria-label="Direct link to Loggers" title="Direct link to Loggers">&ZeroWidthSpace;</a></h2><p>The <code>loggers</code> field is a list of names that the integration's requirements use for their <a href="https://docs.python.org/3/library/logging.html?highlight=logging#logging.getLogger" target="_blank" rel="noopener noreferrer">getLogger</a> calls.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="bluetooth">Bluetooth<a href="#bluetooth" class="hash-link" aria-label="Direct link to Bluetooth" title="Direct link to Bluetooth">&ZeroWidthSpace;</a></h2><p>If your integration supports discovery via bluetooth, you can add a matcher to your manifest. If the user has the <code>bluetooth</code> integration loaded, it will load the <code>bluetooth</code> step of your integration's config flow when it is discovered. We support listening for Bluetooth discovery by matching on <code>connectable</code> <code>local_name</code>, <code>service_uuid</code>, <code>service_data_uuid</code>, <code>manufacturer_id</code>, and <code>manufacturer_data_start</code>. The <code>manufacturer_data_start</code> field expects a list of bytes encoded as integer values from 0-255. The manifest value is a list of matcher dictionaries. Your integration is discovered if all items of any of the specified matchers are found in the Bluetooth data. It's up to your config flow to filter out duplicates.</p><p>Matches for <code>local_name</code> must be at least three (3) characters long and may not contain any patterns in the first three (3) characters.</p><p>If the device only needs advertisement data, setting <code>connectable</code> to <code>false</code> will opt-in to receive discovery from Bluetooth controllers that do not have support for making connections.</p><p>The following example will match Nespresso Prodigio machines:</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #bfc7d5; --prism-background-color: #292d3e;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"bluetooth"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(199, 146, 234);">[</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">      </span><span class="token property">"local_name"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"Prodigio_*"</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(199, 146, 234);">]</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The following example will match service data with a 128 bit uuid used for SwitchBot bot and curtain devices:</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #bfc7d5; --prism-background-color: #292d3e;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"bluetooth"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(199, 146, 234);">[</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">      </span><span class="token property">"service_uuid"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"cba20d00-224d-11e6-9fb8-0002a5d5c51b"</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(199, 146, 234);">]</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" class="clean-btn" aria-label="Toggle word wrap" title="Toggle word wrap"><svg viewBox="0 0 24 24" class="wordWrapButtonIcon_Bwma" aria-hidden="true"><path fill="currentColor" d="M4 19h6v-2H4v2zM20 5H4v2h16V5zm-3 6H4v2h13.25c1.1 0 2 .9 2 2s-.9 2-2 2H15v-2l-3 3l3 3v-2h2c2.21 0 4-1.79 4-4s-1.79-4-4-4z"></path></svg></button><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>If you want to match service data with a 16 bit uuid, you will have to convert it to a 128 bit uuid first, by replacing the 3rd and 4th byte in <code>00000000-0000-1000-8000-00805f9b34fb</code> with the 16 bit uuid. For example, for Switchbot sensor devices, the 16 bit uuid is <code>0xfd3d</code>, the corresponding 128 bit uuid becomes <code>0000fd3d-0000-1000-8000-00805f9b34fb</code>. The following example will therefore match service data with a 16 bit uuid used for SwitchBot sensor devices:</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #bfc7d5; --prism-background-color: #292d3e;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"bluetooth"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(199, 146, 234);">[</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">      </span><span class="token property">"service_data_uuid"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"0000fd3d-0000-1000-8000-00805f9b34fb"</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(199, 146, 234);">]</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" class="clean-btn" aria-label="Toggle word wrap" title="Toggle word wrap"><svg viewBox="0 0 24 24" class="wordWrapButtonIcon_Bwma" aria-hidden="true"><path fill="currentColor" d="M4 19h6v-2H4v2zM20 5H4v2h16V5zm-3 6H4v2h13.25c1.1 0 2 .9 2 2s-.9 2-2 2H15v-2l-3 3l3 3v-2h2c2.21 0 4-1.79 4-4s-1.79-4-4-4z"></path></svg></button><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The following example will match HomeKit devices:</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #bfc7d5; --prism-background-color: #292d3e;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"bluetooth"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(199, 146, 234);">[</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">      </span><span class="token property">"manufacturer_id"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token number" style="color: rgb(247, 140, 108);">76</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">      </span><span class="token property">"manufacturer_data_start"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(199, 146, 234);">[</span><span class="token number" style="color: rgb(247, 140, 108);">6</span><span class="token punctuation" style="color: rgb(199, 146, 234);">]</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(199, 146, 234);">]</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="zeroconf">Zeroconf<a href="#zeroconf" class="hash-link" aria-label="Direct link to Zeroconf" title="Direct link to Zeroconf">&ZeroWidthSpace;</a></h2><p>If your integration supports discovery via <a href="https://en.wikipedia.org/wiki/Zero-configuration_networking" target="_blank" rel="noopener noreferrer">Zeroconf</a>, you can add the type to your manifest. If the user has the <code>zeroconf</code> integration loaded, it will load the <code>zeroconf</code> step of your integration's config flow when it is discovered.</p><p>Zeroconf is a list so you can specify multiple types to match on.</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #bfc7d5; --prism-background-color: #292d3e;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"zeroconf"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(199, 146, 234);">[</span><span class="token string" style="color: rgb(195, 232, 141);">"_googlecast._tcp.local."</span><span class="token punctuation" style="color: rgb(199, 146, 234);">]</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Certain zeroconf types are very generic (i.e., <code>_printer._tcp.local.</code>, <code>_axis-video._tcp.local.</code> or <code>_http._tcp.local</code>). In such cases you should include a Name (<code>name</code>), or Properties (<code>properties</code>) filter:</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #bfc7d5; --prism-background-color: #292d3e;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"zeroconf"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(199, 146, 234);">[</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token property">"type"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token string" style="color: rgb(195, 232, 141);">"_axis-video._tcp.local."</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token property">"properties"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token property">"macaddress"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token string" style="color: rgb(195, 232, 141);">"00408c*"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token property">"type"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token string" style="color: rgb(195, 232, 141);">"_axis-video._tcp.local."</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token property">"name"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token string" style="color: rgb(195, 232, 141);">"example*"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token property">"type"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token string" style="color: rgb(195, 232, 141);">"_airplay._tcp.local."</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token property">"properties"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token property">"am"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token string" style="color: rgb(195, 232, 141);">"audioaccessory*"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">   </span><span class="token punctuation" style="color: rgb(199, 146, 234);">]</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" class="clean-btn" aria-label="Toggle word wrap" title="Toggle word wrap"><svg viewBox="0 0 24 24" class="wordWrapButtonIcon_Bwma" aria-hidden="true"><path fill="currentColor" d="M4 19h6v-2H4v2zM20 5H4v2h16V5zm-3 6H4v2h13.25c1.1 0 2 .9 2 2s-.9 2-2 2H15v-2l-3 3l3 3v-2h2c2.21 0 4-1.79 4-4s-1.79-4-4-4z"></path></svg></button><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Note that all values in the <code>properties</code> filters must be lowercase, and may contain a fnmatch type wildcard.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ssdp">SSDP<a href="#ssdp" class="hash-link" aria-label="Direct link to SSDP" title="Direct link to SSDP">&ZeroWidthSpace;</a></h2><p>If your integration supports discovery via <a href="https://en.wikipedia.org/wiki/Simple_Service_Discovery_Protocol" target="_blank" rel="noopener noreferrer">SSDP</a>, you can add the type to your manifest. If the user has the <code>ssdp</code> integration loaded, it will load the <code>ssdp</code> step of your integration's config flow when it is discovered. We support SSDP discovery by the SSDP ST, USN, EXT, and Server headers (header names in lowercase), as well as data in <a href="https://openconnectivity.org/developer/specifications/upnp-resources/upnp/basic-device-v1-0/" target="_blank" rel="noopener noreferrer">UPnP device description</a>. The manifest value is a list of matcher dictionaries, your integration is discovered if all items of any of the specified matchers are found in the SSDP/UPnP data. It's up to your config flow to filter out duplicates.</p><p>The following example has one matcher consisting of three items, all of which must match for discovery to happen by this config.</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #bfc7d5; --prism-background-color: #292d3e;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"ssdp"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(199, 146, 234);">[</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">      </span><span class="token property">"st"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"roku:ecp"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">      </span><span class="token property">"manufacturer"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"Roku"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">      </span><span class="token property">"deviceType"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"urn:roku-com:device:player:1-0"</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(199, 146, 234);">]</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="homekit">HomeKit<a href="#homekit" class="hash-link" aria-label="Direct link to HomeKit" title="Direct link to HomeKit">&ZeroWidthSpace;</a></h2><p>If your integration supports discovery via HomeKit, you can add the supported model names to your manifest. If the user has the <code>zeroconf</code> integration loaded, it will load the <code>homekit</code> step of your integration's config flow when it is discovered.</p><p>HomeKit discovery works by testing if the discovered modelname starts with any of the model names specified in the manifest.json.</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #bfc7d5; --prism-background-color: #292d3e;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"homekit"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token property">"models"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(199, 146, 234);">[</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">      </span><span class="token string" style="color: rgb(195, 232, 141);">"LIFX"</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(199, 146, 234);">]</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Discovery via HomeKit does not mean that you have to talk the HomeKit protocol to communicate with your device. You can communicate with the device however you see fit.</p><p>When a discovery info is routed to your integration because of this entry in your manifest, the discovery info is no longer routed to integrations that listen to the HomeKit zeroconf type.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="mqtt">MQTT<a href="#mqtt" class="hash-link" aria-label="Direct link to MQTT" title="Direct link to MQTT">&ZeroWidthSpace;</a></h2><p>If your integration supports discovery via MQTT, you can add the topics used for discovery. If the user has the <code>mqtt</code> integration loaded, it will load the <code>mqtt</code> step of your integration's config flow when it is discovered.</p><p>MQTT discovery works by subscribing to MQTT topics specified in the manifest.json.</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #bfc7d5; --prism-background-color: #292d3e;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"mqtt"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(199, 146, 234);">[</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token string" style="color: rgb(195, 232, 141);">"tasmota/discovery/#"</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(199, 146, 234);">]</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>If your integration requires <code>mqtt</code>, make sure it is added to the <a href="#dependencies">dependencies</a>.</p><p>Integrations depending on MQTT should wait using <code>await mqtt.async_wait_for_mqtt_client(hass)</code> for the MQTT client to become available before they can subscribe. The <code>async_wait_for_mqtt_client</code> method will block and return <code>True</code> till the MQTT client is available.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="dhcp">DHCP<a href="#dhcp" class="hash-link" aria-label="Direct link to DHCP" title="Direct link to DHCP">&ZeroWidthSpace;</a></h2><p>If your integration supports discovery via dhcp, you can add the type to your manifest. If the user has the <code>dhcp</code> integration loaded, it will load the <code>dhcp</code> step of your integration's config flow when it is discovered. We support passively listening for DHCP discovery by the <code>hostname</code> and <a href="https://en.wikipedia.org/wiki/Organizationally_unique_identifier" target="_blank" rel="noopener noreferrer">OUI</a>, or matching device registry mac address when <code>registered_devices</code> is set to <code>true</code>. The manifest value is a list of matcher dictionaries, your integration is discovered if all items of any of the specified matchers are found in the DHCP data. It's up to your config flow to filter out duplicates.</p><p>If an integration wants to receive discovery flows to update the IP Address of a device when it comes
//online, but a <code>hostname</code> or <code>oui</code> match would be too broad, and it has registered in the device registry with mac address using the <code>CONNECTION_NETWORK_MAC</code>,
//it should add a DHCP entry with <code>registered_devices</code> set to <code>true</code>.</p><p>If the integration supports <code>zeroconf</code> or <code>ssdp</code>, these should be preferred over <code>dhcp</code> as it generally offers a better
//user experience.</p><p>The following example has three matchers consisting of two items. All of the items in any of the three matchers must match for discovery to happen by this config.</p><p>For example:</p><ul><li>If the <code>hostname</code> was <code>Rachio-XYZ</code> and the <code>macaddress</code> was <code>00:9D:6B:55:12:AA</code>, the discovery would happen.</li><li>If the <code>hostname</code> was <code>Rachio-XYZ</code> and the <code>macaddress</code> was <code>00:00:00:55:12:AA</code>, the discovery would not happen.</li><li>If the <code>hostname</code> was <code>NotRachio-XYZ</code> and the <code>macaddress</code> was <code>00:9D:6B:55:12:AA</code>, the discovery would not happen.</li></ul><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #bfc7d5; --prism-background-color: #292d3e;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"dhcp"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(199, 146, 234);">[</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token property">"hostname"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"rachio-*"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token property">"macaddress"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"009D6B*"</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token property">"hostname"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"rachio-*"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token property">"macaddress"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"F0038C*"</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token property">"hostname"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"rachio-*"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token property">"macaddress"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"74C63B*"</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(199, 146, 234);">]</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Example with setting <code>registered_devices</code> to <code>true</code>:</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #bfc7d5; --prism-background-color: #292d3e;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"dhcp"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(199, 146, 234);">[</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token property">"hostname"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"myintegration-*"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token property">"registered_devices"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token boolean" style="color: rgb(255, 88, 116);">true</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(199, 146, 234);">]</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="usb">USB<a href="#usb" class="hash-link" aria-label="Direct link to USB" title="Direct link to USB">&ZeroWidthSpace;</a></h2><p>If your integration supports discovery via usb, you can add the type to your manifest. If the user has the <code>usb</code> integration loaded, it will load the <code>usb</code> step of your integration's config flow when it is discovered. We support discovery by VID (Vendor ID), PID (Device ID), Serial Number, Manufacturer, and Description by extracting these values from the USB descriptor. For help identifiying these values see <a href="https://wiki.debian.org/HowToIdentifyADevice/USB" target="_blank" rel="noopener noreferrer">How To Identify A Device</a>. The manifest value is a list of matcher dictionaries. Your integration is discovered if all items of any of the specified matchers are found in the USB data. It's up to your config flow to filter out duplicates.</p><div class="theme-admonition theme-admonition-warning alert alert--danger admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"></path></svg></span>danger</div><div class="admonitionContent_S0QG"><p>Some VID and PID combinations are used by many unrelated devices. For example VID <code>10C4</code> and PID <code>EA60</code> matches any Silicon Labs CP2102 USB-Serial bridge chip. When matching these type of devices, it is important to match on <code>description</code> or another identifer to avoid an unexpected discovery.</p></div></div><p>The following example has two matchers consisting of two items. All of the items in any of the two matchers must match for discovery to happen by this config.</p><p>For example:</p><ul><li>If the <code>vid</code> was <code>AAAA</code> and the <code>pid</code> was <code>AAAA</code>, the discovery would happen.</li><li>If the <code>vid</code> was <code>AAAA</code> and the <code>pid</code> was <code>FFFF</code>, the discovery would not happen.</li><li>If the <code>vid</code> was <code>CCCC</code> and the <code>pid</code> was <code>AAAA</code>, the discovery would not happen.</li><li>If the <code>vid</code> was <code>1234</code>, the <code>pid</code> was <code>ABCD</code>, the <code>serial_number</code> was <code>12345678</code>, the <code>manufacturer</code> was <code>Midway USB</code>, and the <code>description</code> was <code>Version 12 Zigbee Stick</code>, the discovery would happen.</li></ul><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #bfc7d5; --prism-background-color: #292d3e;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"usb"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(199, 146, 234);">[</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token property">"vid"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"AAAA"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token property">"pid"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"AAAA"</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token property">"vid"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"BBBB"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token property">"pid"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"BBBB"</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token property">"vid"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"1234"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token property">"pid"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"ABCD"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token property">"serial_number"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"1234*"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token property">"manufacturer"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"*midway*"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token property">"description"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"*zigbee*"</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">    </span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token punctuation" style="color: rgb(199, 146, 234);">]</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="integration-quality-scale">Integration Quality Scale<a href="#integration-quality-scale" class="hash-link" aria-label="Direct link to Integration Quality Scale" title="Direct link to Integration Quality Scale">&ZeroWidthSpace;</a></h2><p>The <a href="https://www.home-assistant.io/docs/quality_scale/" target="_blank" rel="noopener noreferrer">Integration Quality Scale</a> scores an integration on the code quality and user experience. Each level of the quality scale consists of a list of requirements. If an integration matches all requirements, it's considered to have reached that level.</p><p>When your integration has no score, then don't add it to the manifest of your integration. However, be sure to look at the <a href="https://www.home-assistant.io/docs/quality_scale/" target="_blank" rel="noopener noreferrer">Integration Quality Scale</a> list of requirements. It helps to improve the code and user experience tremendously.</p><p>We highly recommend getting your integration scored.</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #bfc7d5; --prism-background-color: #292d3e;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain"> </span><span class="token property">"quality_scale"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"silver"</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="iot-class">IoT Class<a href="#iot-class" class="hash-link" aria-label="Direct link to IoT Class" title="Direct link to IoT Class">&ZeroWidthSpace;</a></h2><p>The <a href="https://www.home-assistant.io/blog/2016/02/12/classifying-the-internet-of-things/#classifiers" target="_blank" rel="noopener noreferrer">IoT Class</a> describes how an integration connects with, e.g., a device or service. For more information
//about IoT Classes, read the blog about <a href="https://www.home-assistant.io/blog/2016/02/12/classifying-the-internet-of-things/#classifiers" target="_blank" rel="noopener noreferrer">"Classifying the Internet of Things"</a>.</p><p>The following IoT classes are accepted in the manifest:</p><ul><li><code>assumed_state</code>: We are unable to get the state of the device. Best we can do is to assume the state based on our last command.</li><li><code>cloud_polling</code>: The integration of this device happens via the cloud and requires an active internet connection. Polling the state means that an update might be noticed later.</li><li><code>cloud_push</code>: Integration of this device happens via the cloud and requires an active internet connection. Home Assistant will be notified as soon as a new state is available.</li><li><code>local_polling</code>: Offers direct communication with device. Polling the state means that an update might be noticed later.</li><li><code>local_push</code>: Offers direct communication with device. Home Assistant will be notified as soon as a new state is available.</li><li><code>calculated</code>: The integration does not handle communication on its own, but provides a calculated result.</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="virtual-integration">Virtual integration<a href="#virtual-integration" class="hash-link" aria-label="Direct link to Virtual integration" title="Direct link to Virtual integration">&ZeroWidthSpace;</a></h2><p>Some products are supported by integrations that are not named after the product. For example, Yale Home locks are integrated via the August integration, and the IKEA SYMFONISK product line can be used with the Sonos integration.</p><p>There are also cases where a product line only supports a standard IoT standards like Zigbee or Z-Wave. For example, the U-tec ultraloq works via Z-Wave and has no specific dedicated integration. </p><p>For end-users, it can be confusing to find how to integrate those products with Home Asssistant. To help with these above cases, Home Assistant has "Virtual integrations". These integrations are not real integrations but are used to help users find the right integration for their device.</p><p>A virtual integration is an integration that just has a single manifest file, without any additional code. There are two types of virtual integrations: A virtual integration supported by another integration and one that uses an existing IoT standard.</p><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_S0QG"><p>Virtual integrations can only be provided by Home Assistant Core and not by custom integrations.</p></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="supported-by">Supported by<a href="#supported-by" class="hash-link" aria-label="Direct link to Supported by" title="Direct link to Supported by">&ZeroWidthSpace;</a></h3><p>The "Supported by" virtual integration is an integration that points to another integration to provide its implementation. For example, Yale Home locks are integrated via the August (<code>august</code>) integration.</p><p>Example manifest:</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #bfc7d5; --prism-background-color: #292d3e;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"domain"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"yale_home"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"name"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"Yale Home"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"integration_type"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"virtual"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"supported_by"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"august"</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The <code>domain</code> and <code>name</code> are the same as with any other integration, but the <code>integration_type</code> is set to <code>virtual</code>.
//The logo for the domain of this virtual integration must be added to our <a href="https://github.com/home-assistant/brands/" target="_blank" rel="noopener noreferrer">brands repository</a>, so in this case, a Yale Home branding is used.</p><p>The <code>supported_by</code> is the domain of the integration providing the implementation for this product. In the example above, the Yale Home lock is supported by the August integration and points to its domain <code>august</code>.</p><p>Result:</p><ul><li>Yale Home is listed on our user documentation website under integrations with an automatically generated stub page that directs the user to the integration to use.</li><li>Yale Home is listed in Home Assistant when clicking "add integration". When selected, we explain to the user that this product is integrated using a different integration, then the user continues to the Xioami Miio config flow.</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="iot-standards">IoT standards<a href="#iot-standards" class="hash-link" aria-label="Direct link to IoT standards" title="Direct link to IoT standards">&ZeroWidthSpace;</a></h3><p>The "IoT Standards" virtual integration is an integration that uses an existing IoT standard to provide connectivity with the device. For example, the U-tec ultraloq works via Z-Wave and has no specific dedicated integration.</p><p>Example manifest:</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color: #bfc7d5; --prism-background-color: #292d3e;"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token punctuation" style="color: rgb(199, 146, 234);">{</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"domain"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"ultraloq"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"name"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"ultraloq"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"integration_type"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token string" style="color: rgb(195, 232, 141);">"virtual"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain">  </span><span class="token property">"iot_standards"</span><span class="token operator" style="color: rgb(137, 221, 255);">:</span><span class="token plain"> </span><span class="token punctuation" style="color: rgb(199, 146, 234);">[</span><span class="token string" style="color: rgb(195, 232, 141);">"zwave"</span><span class="token punctuation" style="color: rgb(199, 146, 234);">]</span><span class="token punctuation" style="color: rgb(199, 146, 234);">,</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain"></span><span class="token punctuation" style="color: rgb(199, 146, 234);">}</span><span class="token plain"></span><br></span><span class="token-line" style="color: rgb(191, 199, 213);"><span class="token plain" style="display: inline-block;"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The <code>domain</code> and <code>name</code> are the same as with any other integration, but the <code>integration_type</code> is set to <code>virtual</code>.
//The logo for the domain of this virtual integration should be added to our <a href="https://github.com/home-assistant/brands/" target="_blank" rel="noopener noreferrer">brands repository</a>.</p><p>The <code>iot_standards</code> is the standard this product uses for connectivity. In the example above, the U-tech ultraloq products use Z-Wave to integrate with Home Assistant.</p><p>Result:</p><ul><li>U-tech ultraloq is listed on our user documentation website under integrations with an automatically generated stub page that directs the user to the integration to use.</li><li>U-tech ultraloq is listed in Home Assistant when clicking "add integration". When selected, we guide the user in adding this Z-Wave device (and in case Z-Wave isn't set up yet, into setting up Z-Wave first).</li></ul><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_S0QG"><p>Brands also <a href="/docs/creating_integration_brand/#iot-standards">support setting IoT standards</a>.</p><p>It is preferred to set IoT standards on the brand level, and only use a virtual
//integration in case it would impose confusion for the end user.</p></div></div></div><footer class="theme-doc-footer docusaurus-mt-lg"><div class="theme-doc-footer-edit-meta-row row"><div class="col"><a href="https://github.com/home-assistant/developers.home-assistant/edit/master/docs/creating_integration_manifest.md" target="_blank" rel="noreferrer noopener" class="theme-edit-this-page"><svg fill="currentColor" height="20" width="20" viewBox="0 0 40 40" class="iconEdit_Z9Sw" aria-hidden="true"><g><path d="m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z"></path></g></svg>Edit this page</a></div><div class="col lastUpdated_vwxv"><span class="theme-last-updated">Last updated on <b><time datetime="2023-09-21T09:02:26.000Z">Sep 21, 2023</time></b></span></div></div></footer></article>